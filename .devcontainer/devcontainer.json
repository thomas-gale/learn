// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.112.0/containers/ubuntu-18.04-git
{
	"name": "vscode-ubuntu-cuda-gl-torch-cpp-dev",
	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-azuretools.vscode-docker",
		"twxs.cmake",
		"ms-vscode.cmake-tools",
		"ms-vscode.cpptools",
		"mitaki28.vscode-clang",
		"xaver.clang-format",
		"robbowen.synthwave-vscode" // Very important
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker.
	//"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	"runArgs": [
		"--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined", // ptrace-based debugger like C++, Go, and Rust
		"-e", "DISPLAY=${localEnv:DISPLAY}", "-v", "/tmp/.X11-unix:/tmp/.X11-unix", // X11 forwarding (mount X11 in container)
		"--gpus", "all" // Request 
	],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}